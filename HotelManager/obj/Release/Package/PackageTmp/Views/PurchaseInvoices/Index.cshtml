@using Microsoft.AspNet.Identity
@using HotelManager.Configuration

@{
    ViewBag.Title = "Index";
    //Layout = "~/Views/Shared/_Layout2.cshtml";
}


<div id="popupWindow" style="position: absolute"></div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div>
        @(Html.Kendo().Grid<MVCDTO.PurchaseTasks.PurchaseInvoicePrimitiveDTO>()
            .Name("purchaseInvoiceGrid")
            .Columns(columns =>
            {
                columns.Bound(p => p.PurchaseInvoiceID).Title("PurchaseInvoiceID").Hidden();
                columns.Bound(p => p.PurchaseInvoiceReference).Title("Số phiếu").Width(80);
                columns.Bound(p => p.PurchaseInvoiceDate).Title("Ngày mua").Format("{0:d}").Width(100);
                columns.Bound(p => p.SupplierName).Title("Nhà cung cấp").Width(150);                           
                columns.Bound(p => p.Description).Title("Diễn giải").Width(200);
                columns.Bound(p => p.TotalQuantity).Title("Số lượng").Format("{0:n0}").Filterable(false).Width(150).HtmlAttributes(new { @class = "grid-number-column" });
                columns.Bound(p => p.TotalAmount).Title("Thành tiền").Format("{0:n0}").Filterable(false).Width(150).HtmlAttributes(new { @class = "grid-number-column" }); 
                columns.Bound(p => p.TotalVATAmount).Title("Thuế VAT").Format("{0:n0}").Filterable(false).Width(150).HtmlAttributes(new { @class = "grid-number-column" }); 
                columns.Bound(p => p.TotalGrossAmount).Title("Tổng cộng").Format("{0:n0}").Filterable(false).Width(150).HtmlAttributes(new { @class = "grid-number-column" }); 
                columns.Bound(p => p.Remarks).Title("Ghi chú").Filterable(false).Width(150).Hidden();          
                columns.Template(model => null)
                    .Width(200)
                   .ClientTemplate("<a class='k-button' style='padding-left:5px; min-width:28px; width:28px' href='" + Url.RouteUrl("Default", new { controller = "PurchaseInvoices", action = "Edit" }) + "/#= PurchaseInvoiceID #'><span class='k-icon k-edit'></span></a>  <a class='k-button' style='padding-left:0px; padding-right:0px; min-width:28px; width:28px' href='javascript:void(0)'><text style='padding-left:5px; padding-right:5px' onclick='delete_click(#= PurchaseInvoiceID #)'><span class='k-icon k-delete'></span></text></a>");
            })
            .ToolBar(toolbar => toolbar.Custom().Action("Create", "PurchaseInvoices"))
            .Pageable()
            .Groupable()
            .Filterable()
            .Selectable()
            .Sortable()
            .Editable(e => e.Enabled(false))         
            .Events(e =>
            {
                e.DataBound("purchaseInvoiceGrid_DataBound");                
                
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("GetPurchaseInvoices", "PurchaseInvoicesApi"))
                .Update(update => update.Action("UpdatePurchaseInvoices", "PurchaseInvoicesApi"))
                .Destroy(update => update.Action("DeletePurchaseInvoices", "PurchaseInvoicesApi"))
                //.Events(events => events.Error("onError"))
                .PageSize(20)
                .Model(model =>
                {
                    model.Id(x => x.PurchaseInvoiceID);
                    model.Field(m => m.PurchaseInvoiceID).DefaultValue(0);
                })
            .ServerOperation(false)
            .Aggregates(a => a.Add(x => x.TotalAmount).Sum())
                ).HtmlAttributes(new { @class = "grid-class" }))
    </div>          
    
}



<script type="text/javascript">
    var index = 0;
    var load = true;

    $(document).ready(function () {
        var grid = $("#purchaseInvoiceGrid").data("kendoGrid");
        grid.dataSource.fetch(function () {
            grid.dataSource.page(index);
        });
    });

    purchaseInvoiceGrid_DataBound = function (e) {
        var grid = this;
        $.each(grid.dataSource.data(), function (idx, elem) {
            if ('@ViewBag.SelectedID' == -1) {
                return false;
            }
            if (elem.PurchaseInvoiceID == '@ViewBag.SelectedID') {
                $('[data-uid=' + elem.uid + ']').addClass('k-state-selected');
                index = Math.floor(idx / grid.dataSource.pageSize() + 1);
                return false;
            }
        });
    }  

    function delete_click(purchaseInvoiceID) {
       
        var r = confirm("@SettingsManager.DeleteAlert");
        if (r == true) {
            var datapost = { 'id': purchaseInvoiceID }
            $.ajax({
                url: '@Url.Action("Delete","PurchaseInvoices")',
                data: JSON.stringify(datapost),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                    if (result.Success == 0) {
                        alert(result.ex);
                    }
                    else {
                        $('#purchaseInvoiceGrid').data('kendoGrid').dataSource.read();
                        $('#purchaseInvoiceGrid').data('kendoGrid').refresh();
                    }
                }
            });
        }
    }

</script>

<style type="text/css">
    #purchaseInvoiceGrid{
        width: 1000px;
    }
</style>